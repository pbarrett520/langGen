1. Figure out how to reconcile vowel paradigms with consononants paradigms. If the goal is to make a unified way to dictate transformations of 
    sounds regardless of if they're vowels or consonants, how can an intuitive way to do that across paradigms be implemeted despite differences
    in the way data is organized? Should SQL be adopted over the current CSV/Pandas implementation?

2. A class should be created that holds different preset templates for syllable structures (ex: a Polyneisian template, a Sinitic template, 
    a Germanic template, etc.) in the form of regexes. This will be more convenient that writing new ones from scratch everytime, and class
    methods can be written to allow users to edit the templates to their liking as well.

3. Making a really simple CLI for this program is the first step towrds any kind of usuability. Figuring out an elegant way to take a user input for
    how to dictate the consonant-vowel pattern of their conlangs syllable stucture is a thing that needs to be puzzled out.

4. Once the details of how users can dictate a conlang at the phonemic/phonetic level have been devised, the next step is to create ways to dictate
    morphology, then eventually syntax. Generationg basic vocabularies based on the Swadesh list is also an important thing that will need to be
    done.